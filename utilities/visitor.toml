root = "tau.asts.AST"
inside_class = true
field_excludes = [
    "semantic_type",
    "register_pool",
    "enclosing_function",
    "size",
    "register",
    "span",
    "symbol",
    "token",
    "func_scope",
    "local_scope",
    "op",
    "value",
]

prologue = """
from typing import Callable
from dataclasses import dataclass

from tau import asts

@dataclass
class Visitor:
    fn : Callable[[asts.AST], None]
"""

[[emit]]
roots = ["tau.asts.AST"]
include_self = true
prologue = 'self.fn(ast)'

[[emit]]
